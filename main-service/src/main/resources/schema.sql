CREATE TABLE IF NOT EXISTS users
(
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name                VARCHAR(250) NOT NULL,
  email               VARCHAR(254) NOT NULL,
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name                VARCHAR(50) NOT NULL,
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  lat                 FLOAT NOT NULL,
  lon                 FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  annotation          VARCHAR(2000) NOT NULL,
  created_on          TIMESTAMP WITHOUT TIME ZONE,
  description         VARCHAR(7000) NOT NULL,
  event_date          TIMESTAMP WITHOUT TIME ZONE,
  paid                BOOLEAN NOT NULL,
  participant_limit   BIGINT NOT NULL,
  published_on        TIMESTAMP WITHOUT TIME ZONE,
  request_moderation  BOOLEAN NOT NULL,
  title               VARCHAR(120) NOT NULL,
  state               VARCHAR(255) NOT NULL,
  category_id         BIGINT REFERENCES categories (id),
  user_id             BIGINT REFERENCES users (id) ON DELETE CASCADE,
  location_id         BIGINT REFERENCES locations (id)
);

CREATE TABLE IF NOT EXISTS requests
(
  id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created             TIMESTAMP WITHOUT TIME ZONE,
  event_id BIGINT     REFERENCES events (id) ON DELETE CASCADE,
  requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
  status              VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
  id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  pinned              BOOLEAN NOT NULL,
  title               VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events
(
  compilation_id      BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
  event_id            BIGINT REFERENCES events (id) ON DELETE CASCADE
);